@using Booker.WebUI.Controllers
@using Booker.WebUI.Helpers
@using Booker.WebUI.Models
@model Booker.WebUI.Models.QuotesAwaitingApproval.QuoteApprovalDecisionModel

@{
    var actionType = "Approval";
    if (User.IsInRole(UserManagementHelper.HelpDeskRoleName))
    {
        actionType = "Verification";
    }
    ViewBag.Title = string.Format("Quote {0} Decision", actionType);
    ViewBag.MenuSection = "quotes-menu";
}

<div class="main-content">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h2>@ViewBag.Title</h2>

                @Html.Partial("_QuoteDetails", Model)

                @Html.Partial("_ApproveQuoteApprovalScenario", Model.ApproveViewModel)

                @if (!Model.IsForCapexApproval)
                {
                    using (Html.BeginForm("RequestCapexApproval", "QuotesAwaitingApproval", new { id = Model.ApproveViewModel.ApproveQuoteApprovalScenarioId }, FormMethod.Post, new { style = "display: inline-block" }))
                    {
                        @Html.AntiForgeryToken()

                        if (ViewBag.ReturnUrl != null)
                        {
                            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                        }
                    }
                }

                <div id="quote-nonapproval" class="default-top-margin clear-fix">
                    <div class="form-panel-container" style="float: left">
                        @Html.Partial("_RejectQuoteApprovalScenario", Model.RejectViewModel)
                    </div>
                    @if (!User.IsInRole(UserManagementHelper.BookerUserRoleName))
                    {
                        <div class="form-panel-container" style="float: right">
                            @Html.Partial("_QueryQuoteApprovalScenario", Model.QueryViewModel)
                        </div>
                    }
                </div>

                @if ((Model.QueryHistory != null) && (Model.QueryHistory.Any()))
                {
                    <div id="query-history">
                        <h3>Query History</h3>
                        @Html.Partial("_QuoteQueryHistory", Model.QueryHistory)
                    </div>
                }

                <div class="default-top-margin">
                    <hr />

                    @if (ViewBag.ReturnUrl != null)
                    {
                        @Html.ActionLink("Back to Quotes with Query Response", "Index", "QuotesQueryAnswered")
                        @*<a href="@ViewBag.ReturnUrl" title="Back to previous page"><< Back to previous page</a>*@
                    }
                    else
                    {
                        @Html.ActionLink("<< Back to Quotes Awaiting " + actionType, "Index")
                    }

                </div>

                @helper ViewFileUpload(UploadFileViewModel fileUploadModel)
{
    if (fileUploadModel.IsExistingFile)
    {
        @Html.ActionLink("View", "QuoteDocument", "QuotesAwaitingApproval", new { id = Model.Quote.QuoteHeader.Id, documentType = fileUploadModel.UploadType }, new { target = "_blank" })
    }
    else
    {
        <text>Not Specified</text>
    }
}
            </div>
        </div>
    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
